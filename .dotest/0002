From a2fcd3e5bb95b32066fb3f328da084b432edb4b4 Mon Sep 17 00:00:00 2001
From: Armin Weatherwax <Armin.Weatherwax@gmail.com>
Date: Fri, 3 Apr 2009 18:20:55 +0200
Subject: Mini map teleport reloaded: type slurl or region or region/x/y/z or x/y/z into the new lineeditor in the mini map for teleporting.

	modified:   linden/indra/newview/llagent.cpp
	modified:   linden/indra/newview/llagent.h
	modified:   linden/indra/newview/llfloatermap.cpp
	modified:   linden/indra/newview/llfloatermap.h
	modified:   linden/indra/newview/llurldispatcher.cpp
	modified:   linden/indra/newview/llurldispatcher.h
	modified:   linden/indra/newview/skins/default/xui/en-us/floater_mini_map.xml
---
 linden/indra/newview/llagent.cpp                   |   21 +++++-
 linden/indra/newview/llagent.h                     |    4 +
 linden/indra/newview/llfloatermap.cpp              |   75 ++++++++++++++++++++
 linden/indra/newview/llfloatermap.h                |    7 ++
 linden/indra/newview/llurldispatcher.cpp           |   29 ++++++--
 linden/indra/newview/llurldispatcher.h             |    6 ++
 .../skins/default/xui/en-us/floater_mini_map.xml   |   13 ++++
 7 files changed, 149 insertions(+), 6 deletions(-)

diff --git a/linden/indra/newview/llagent.cpp b/linden/indra/newview/llagent.cpp
index 5f0a8759b76cab427f36a02caf9e7cd1ca4773c4..d8f283987a4cfe559ab57c173897f837591aecc7 100644
--- a/linden/indra/newview/llagent.cpp
+++ b/linden/indra/newview/llagent.cpp
@@ -106,6 +106,7 @@
 #include "lltoolview.h"
 #include "llui.h"			// for make_ui_sound
 #include "llurldispatcher.h"
+#include "llurlsimstring.h"
 #include "llviewercamera.h"
 #include "llviewerinventory.h"
 #include "llviewermenu.h"
@@ -5993,7 +5994,6 @@ void LLAgent::teleportViaLocation(const LLVector3d& pos_global)
 	}
 }
 
-
 void LLAgent::teleportHome()
 {
 	teleportViaLandmark(LLUUID::null);
@@ -6014,6 +6014,25 @@ void LLAgent::teleportHomeCallback(S32 option, void *userdata)
 	}
 }
 
+void LLAgent::teleportViaSLURL(const std::string& slurl)
+{
+	LLViewerRegion* regionp = getRegion();
+	if(regionp != NULL && LLURLDispatcher::isSLURL(slurl))
+	{
+		// The default URL dispatch is to bring up the about land floater.
+		// We want an actual teleport here.
+		std::string strippedText = LLURLDispatcher::stripProtocol(slurl);
+		std::string region_name;
+		S32 x = 128;
+		S32 y = 128;
+		S32 z = 28;
+		LLURLSimString::parse(strippedText, &region_name, &x, &y, &z);
+
+		std::string commandtext = LLURLDispatcher::buildSLURLCommand("teleport", region_name, x, y, z);
+		LLURLDispatcher::dispatch(commandtext, false);
+	}
+
+}
 
 void LLAgent::setTeleportState(ETeleportState state)
 {
diff --git a/linden/indra/newview/llagent.h b/linden/indra/newview/llagent.h
index a4a930fb56ccf91a340a5db6a53489f66b4d0072..d474bdaefe2afecc63314419239121bcadd13576 100644
--- a/linden/indra/newview/llagent.h
+++ b/linden/indra/newview/llagent.h
@@ -178,6 +178,7 @@ public:
 	std::string		getSLURL() const;
 	
 	void			updateAgentPosition(const F32 dt, const F32 yaw, const S32 mouse_x, const S32 mouse_y);		// call once per frame to update position, angles radians
+
 	void			updateLookAt(const S32 mouse_x, const S32 mouse_y);
 
 
@@ -474,6 +475,9 @@ public:
 	// deprecated.
 	void teleportViaLocation(const LLVector3d& pos_global); 
 
+	// to a SLURL
+	void teleportViaSLURL(const std::string& slurl);
+
 	// cancel the teleport, may or may not be allowed by server
 	void teleportCancel();
 
diff --git a/linden/indra/newview/llfloatermap.cpp b/linden/indra/newview/llfloatermap.cpp
index 6115404b880bf4a4101f71d5b76f7caa3ec66530..c6019106c2b240622dcf678794dea5ce0c1bd90a 100644
--- a/linden/indra/newview/llfloatermap.cpp
+++ b/linden/indra/newview/llfloatermap.cpp
@@ -41,6 +41,8 @@
 #include "llregionhandle.h"
 #include "llresizebar.h"
 #include "lluictrlfactory.h"
+#include "llurldispatcher.h"
+#include "llviewerregion.h"
 
 LLFloaterMap::LLFloaterMap(const LLSD& key)
 	:
@@ -50,6 +52,17 @@ LLFloaterMap::LLFloaterMap(const LLSD& key)
 	LLCallbackMap::map_t factory_map;
 	factory_map["mini_mapview"] = LLCallbackMap(createPanelMiniMap, this);
 	LLUICtrlFactory::getInstance()->buildFloater(this, "floater_mini_map.xml", &factory_map, FALSE);
+
+
+	mSlurlEditor = getChild<LLLineEditor>("mini_map_slurl");
+	if (mSlurlEditor)
+	{
+		mSlurlEditor -> setCallbackUserData(this);
+		mSlurlEditor -> setCommitOnFocusLost( FALSE );
+	}
+
+	childSetAction("mini_map_go", onClickMiniMapGo, this);
+	
 }
 
 
@@ -71,6 +84,28 @@ BOOL LLFloaterMap::postBuild()
 }
 
 
+// virtual
+BOOL LLFloaterMap::handleKeyHere( KEY key, MASK mask )
+{
+	BOOL handled = FALSE;
+
+	if( KEY_RETURN == key )
+	{
+		if (mask == MASK_NONE)
+		{
+			if (mSlurlEditor)
+			{
+				std::string location_raw = mSlurlEditor->getText() ;
+				miniMapGo(location_raw);
+				
+			}
+			handled = TRUE;
+		}
+	}
+
+	return handled;
+}
+
 LLFloaterMap::~LLFloaterMap()
 {
 }
@@ -100,7 +135,47 @@ BOOL LLFloaterMap::canClose()
 {
 	return !LLApp::isExiting();
 }
+//static 
+void LLFloaterMap::onClickMiniMapGo( void* userdata )
+{
+	LLFloaterMap* self = (LLFloaterMap*) userdata;
+	std::string location_raw =  self->mSlurlEditor->getText();
+	miniMapGo(location_raw);
+}
+//static 
+void LLFloaterMap::miniMapGo(std::string location_raw)
+{	
+	LLStringUtil::trim(location_raw);
+	if( !location_raw.empty() )
+	{ 
+ 		LLViewerRegion* regionp = gAgent.getRegion();
+		std::string location = location_raw;
+
+		std::string::size_type idx = location_raw.find("://");
+		if ( idx==std::string::npos)
+		{
+			idx = location_raw.find_first_of("0123456789");
+			if (idx || idx==std::string::npos)
+			{
+				location = "sl://"+location_raw;
+			}
+			else
+			{
+				location = "sl://"+regionp->getName()+"/"+location_raw;
+			}
+
+		}
+
+		if(regionp != NULL && LLURLDispatcher::isSLURL(location))
+		{
+			gAgent.teleportViaSLURL(location);
+			gAgent.setControlFlags(AGENT_CONTROL_STAND_UP);//stand up
+		}
+		
+	}
+ 
 
+}
 
 // virtual
 void LLFloaterMap::draw()
diff --git a/linden/indra/newview/llfloatermap.h b/linden/indra/newview/llfloatermap.h
index dd1cba8cd83db70f0628d9b1a779f963e025c3f9..76594bd47ae0dba99f28c3a8a15bea7e010731df 100644
--- a/linden/indra/newview/llfloatermap.h
+++ b/linden/indra/newview/llfloatermap.h
@@ -46,16 +46,23 @@ public:
 
 	static void* createPanelMiniMap(void* data);
 
+
 	BOOL postBuild();
 
+	virtual BOOL handleKeyHere(KEY key, MASK mask);
+
 	/*virtual*/ void	draw();
 	/*virtual*/ void	onOpen();
 	/*virtual*/ void	onClose(bool app_quitting);
 	/*virtual*/ BOOL	canClose();
 
 private:
+	LLLineEditor*	mSlurlEditor;
 	LLFloaterMap(const LLSD& key = LLSD());
 	LLNetMap*		mPanelMap;
+
+	static void	 	onClickMiniMapGo( void* userdata );
+	static void		miniMapGo(std::string location_raw);
 };
 
 #endif  // LL_LLFLOATERMAP_H
diff --git a/linden/indra/newview/llurldispatcher.cpp b/linden/indra/newview/llurldispatcher.cpp
index bbc5c75caf3e6a14e2140c4835ac1ba6f2bc3ba2..8a8e6fa30cd861f7542b870ca9dda27beee5e1e5 100644
--- a/linden/indra/newview/llurldispatcher.cpp
+++ b/linden/indra/newview/llurldispatcher.cpp
@@ -53,6 +53,7 @@ const std::string SLURL_SL_HELP_PREFIX		= "secondlife://app.";
 const std::string SLURL_SL_PREFIX			= "sl://";
 const std::string SLURL_SECONDLIFE_PREFIX	= "secondlife://";
 const std::string SLURL_SLURL_PREFIX		= "http://slurl.com/secondlife/";
+const std::string SLURL_SECONDLIFE_COM_PREFIX = "http://secondlife.com/";
 
 const std::string SLURL_APP_TOKEN = "app/";
 
@@ -68,6 +69,8 @@ public:
 
 	static bool dispatchRightClick(const std::string& url);
 
+	static std::string stripProtocol(const std::string& url);
+
 private:
 	static bool dispatchCore(const std::string& url, 
 		bool from_external_browser, bool right_mouse);
@@ -98,8 +101,6 @@ private:
 
 	static bool matchPrefix(const std::string& url, const std::string& prefix);
 	
-	static std::string stripProtocol(const std::string& url);
-
 	friend class LLTeleportHandler;
 };
 
@@ -110,6 +111,7 @@ bool LLURLDispatcherImpl::isSLURL(const std::string& url)
 	if (matchPrefix(url, SLURL_SL_PREFIX)) return true;
 	if (matchPrefix(url, SLURL_SECONDLIFE_PREFIX)) return true;
 	if (matchPrefix(url, SLURL_SLURL_PREFIX)) return true;
+	if (matchPrefix(url, SLURL_SECONDLIFE_COM_PREFIX)) return true;
 	return false;
 }
 
@@ -118,7 +120,8 @@ bool LLURLDispatcherImpl::isSLURLCommand(const std::string& url)
 { 
 	if (matchPrefix(url, SLURL_SL_PREFIX + SLURL_APP_TOKEN)
 		|| matchPrefix(url, SLURL_SECONDLIFE_PREFIX + "/" + SLURL_APP_TOKEN)
-		|| matchPrefix(url, SLURL_SLURL_PREFIX + SLURL_APP_TOKEN) )
+		|| matchPrefix(url, SLURL_SLURL_PREFIX + SLURL_APP_TOKEN) 
+		|| matchPrefix(url, SLURL_SECONDLIFE_COM_PREFIX + SLURL_APP_TOKEN) )
 	{
 		return true;
 	}
@@ -146,7 +149,6 @@ bool LLURLDispatcherImpl::dispatchCore(const std::string& url, bool from_externa
 // static
 bool LLURLDispatcherImpl::dispatch(const std::string& url, bool from_external_browser)
 {
-	llinfos << "url: " << url << llendl;
 	const bool right_click = false;
 	return dispatchCore(url, from_external_browser, right_click);
 }
@@ -154,7 +156,6 @@ bool LLURLDispatcherImpl::dispatch(const std::string& url, bool from_external_br
 // static
 bool LLURLDispatcherImpl::dispatchRightClick(const std::string& url)
 {
-	llinfos << "url: " << url << llendl;
 	const bool from_external_browser = false;
 	const bool right_click = true;
 	return dispatchCore(url, from_external_browser, right_click);
@@ -349,6 +350,10 @@ std::string LLURLDispatcherImpl::stripProtocol(const std::string& url)
 	{
 		stripped.erase(0, SLURL_SLURL_PREFIX.length());
 	}
+	else if (matchPrefix(stripped, SLURL_SECONDLIFE_COM_PREFIX))
+	{
+		stripped.erase(0, SLURL_SECONDLIFE_COM_PREFIX.length());
+	}
 	return stripped;
 }
 
@@ -425,3 +430,17 @@ std::string LLURLDispatcher::buildSLURL(const std::string& regionname, S32 x, S3
 	slurl = LLWeb::escapeURL( slurl );
 	return slurl;
 }
+
+// static 
+std::string LLURLDispatcher::buildSLURLCommand(const std::string& command, const std::string& regionname, S32 x, S32 y, S32 z)
+{
+	std::string slurl = SLURL_SECONDLIFE_COM_PREFIX + SLURL_APP_TOKEN + command + "/" + regionname + llformat("/%d/%d/%d",x,y,z); 
+	slurl = LLWeb::escapeURL( slurl );
+	return slurl;
+}
+
+// static
+std::string LLURLDispatcher::stripProtocol(const std::string& url)
+{
+	return LLURLDispatcherImpl::stripProtocol(url);
+}
diff --git a/linden/indra/newview/llurldispatcher.h b/linden/indra/newview/llurldispatcher.h
index 68bd84164ef737474450a9a47fa71b629e4a4691..5b44dad51929fc05eaff9f240a747b10fc8e6ad5 100644
--- a/linden/indra/newview/llurldispatcher.h
+++ b/linden/indra/newview/llurldispatcher.h
@@ -55,6 +55,12 @@ public:
 
 	static std::string buildSLURL(const std::string& regionname, S32 x, S32 y, S32 z);
 		//   builds: http://slurl.com/secondlife/RegionName/x/y/z/
+
+	static std::string buildSLURLCommand(const std::string& command, const std::string& regionname, S32 x, S32 y, S32 z);
+		//   builds: http://slurl.com/secondlife/app/command/RegionName/x/y/z
+
+	static std::string stripProtocol(const std::string& url);
+
 };
 
 #endif
diff --git a/linden/indra/newview/skins/default/xui/en-us/floater_mini_map.xml b/linden/indra/newview/skins/default/xui/en-us/floater_mini_map.xml
index 1b31afa4e68cb17ed69f1f6629d0c13ce95ad181..eaf1ece873582608ca0a2ec26d1058f92f8ca1b4 100644
--- a/linden/indra/newview/skins/default/xui/en-us/floater_mini_map.xml
+++ b/linden/indra/newview/skins/default/xui/en-us/floater_mini_map.xml
@@ -5,4 +5,17 @@
     <panel bottom="2" follows="left|top|right|bottom" height="216" label="Mini Map"
 		 left="2" mouse_opaque="false" name="mini_mapview" 
 		 width="196" />
+    <panel bottom="2" follows="left|top|right|bottom" height="216" label="Mini Map"
+	   left="2" mouse_opaque="false" name="mini_mapview_tp" tool_tip="(Double-click to teleport)"
+		 width="196" />
+    <line_editor bevel_style="in" border_style="line" border_thickness="1" bottom="4"
+		 enabled="true" follows="left|right" font="SansSerifSmall"
+		 handle_edit_keys_directly="false" height="14" left="20"
+		 max_length="255" mouse_opaque="true" name="mini_map_slurl"
+		 select_all_on_focus_received="false" select_on_focus="false"
+		 tool_tip="type/paste slurl or region or region/x/y/z or x/y/z to teleport"
+		 width="148" />
+    <button name="mini_map_go"  label="" tool_tip="Go !"
+	    bottom="4" height="14" left="-30"   width="14" follows="right" 
+	    scale_image="true" toggle="false" />
 </floater>
-- 
1.5.6.5


